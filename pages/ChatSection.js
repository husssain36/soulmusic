import React from 'react'
import axios from 'axios';
import Navbar from '../components/Navbar'
import styled from 'styled-components'
import MicIcon from '@mui/icons-material/Mic';
import InsertEmoticonIcon from '@mui/icons-material/InsertEmoticon';
import { useState, useEffect } from 'react'
import Message from '../components/Message';
import SongMessage from '../components/SongMessage'
import Head from 'next/head';




function ChatSection() {

  const [input1, setInput1] = useState('')
  const [input2, setInput2] = useState('')
  const [input3, setInput3] = useState('')

  const [mood, setMood] = useState('')

  const [count, setCount] = useState(0)
  const [songs, setSongs] = useState([])
  
  
  
  const sendMessage = (e) => {
    e.preventDefault()
    setCount(count+1)
  }

  const fetchSongs = async (mood) => {
    try {
      const { data: songsData } = await axios.post("http://localhost:8000/api/recommendSong", {mood})
      setSongs(songsData)
    } catch (error) {
      console.log(error)
    }
    setCount(count + 1)
  }

  

  const detectMood = async (e, sentence) => {
    e.preventDefault()
    
    try {
      const { data } = await axios.post("http://localhost:8000/api/detectMood", {sentence})
      setMood(data.mood)
    } catch (error) {
      console.log(error)
    }
    setCount(count + 1)
  }

  useEffect(() => {
    if(mood.length > 0){
      fetchSongs(mood)
    }
  }, [mood])


  return (
    <div className="bg-[#0A183D] h-full min-h-screen overflow-scroll scrollbar-hide">
        <Head>
        <title>SoulMusic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/chatbot.ico" />
        </Head>
        <Navbar/>
        

        <MessageContainer>
          <Message message="Hello User, Welcome to SoulMusic - music for every mood. Let's start with your name" typeOfUser="bot"/>
          
          {count >= 1 && <Message message={input1} typeOfUser="user"/>}

          {count >= 1 && <Message message={`Hello ${input1}, How Are You Feeling Today??`} typeOfUser="bot"/>}

          {count >= 2 && <Message message={input2} typeOfUser="user"/>}

          {count >= 2 && <Message message={`Your detected mood is ${mood}, this song might match your mood`} typeOfUser="bot"/>}

          {count >= 2 && <Message message={`Recommending songs`} typeOfUser="bot"/>}
          {count >= 3 && Object.keys(songs).map((song, idx) => (
            <SongMessage song={songs[idx]} key={idx} typeOfUser="Bot" />
          ))}
        </MessageContainer>

        {count == 0 && (
          <InputContainer>
            <InsertEmoticonIcon className="ml-4"/>
            <Input value={input1} onChange={e => setInput1(e.target.value)}/>
            <MicIcon className="mr-20"/>
            <button hidden disabled={!input1} type="submit" onClick={sendMessage}>Send Message</button>
          </InputContainer>
        )}

        {count == 1 && (
          <InputContainer>
            <InsertEmoticonIcon className="ml-4"/>
            <Input value={input2} onChange={e => setInput2(e.target.value)}/>
            <MicIcon className="mr-20"/>
            <button hidden disabled={!input2} type="submit" onClick={(e) => detectMood(e, input2)}>Send Message</button>
          </InputContainer>
        )}

        {count == 2 && (
          <InputContainer>
            <InsertEmoticonIcon className="ml-4"/>
            <Input value={input3} onChange={e => setInput3(e.target.value)}/>
            <MicIcon className="mr-20"/>
            <button hidden disabled={!input3} onClick={sendMessage}>Send Message</button>
          </InputContainer>
        )}

    </div>
  )
}

export default ChatSection

const MessageContainer = styled.div`
  padding: 30px;
  min-height: 82vh
`;

const InputContainer = styled.form`
  display: flex;
  align-items: center;
  padding: 10px
  position: sticky;
  bottom: 0;
  background-color: white;
  z-index: 100;
  border-radius: 50px
  `;
const Input = styled.input`
  flex: 1;
  outline: 0;
  padding: 15px;
  bottom: 0;

  margin-left: 15px;
  margin-right: 15px;
  border: none;
  
`;